buildscript {
  ext.kotlinVersion = '1.7.0'
  ext.kotlinCoroutinesVersion = '1.6.3-native-mt'
  ext.ktorVersion = '1.6.8'
  ext.testGsonVersion = '2.9.0'
  ext.testLog4j2Version = '2.17.2'
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

plugins {
  id "com.github.johnrengelman.shadow" version "7.0.0"
}

repositories {
  mavenCentral()
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'kotlin'

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinCoroutinesVersion"
  implementation "io.ktor:ktor-client-core:$ktorVersion"
  implementation "io.ktor:ktor-client-cio:$ktorVersion"
  implementation("io.ktor:ktor-client-gson:$ktorVersion") {
    exclude group: 'com.google.code.gson', module: 'gson' // already provided by Ghidra
  }
  implementation "io.ktor:ktor-client-websockets:$ktorVersion"
  testImplementation "com.google.code.gson:gson:$testGsonVersion"
  testImplementation "org.apache.logging.log4j:log4j-api:$testLog4j2Version"
  testImplementation "org.apache.logging.log4j:log4j-core:$testLog4j2Version"
}

kotlin {
  jvmToolchain {
    languageVersion.set(JavaLanguageVersion.of("17"))
  }
}

def ghidraInstallDir

if (System.env.GHIDRA_INSTALL_DIR) {
	ghidraInstallDir = System.env.GHIDRA_INSTALL_DIR
}
else if (project.hasProperty("GHIDRA_INSTALL_DIR")) {
	ghidraInstallDir = project.getProperty("GHIDRA_INSTALL_DIR")
}

if (ghidraInstallDir) {
	apply from: new File(ghidraInstallDir).getCanonicalPath() + "/support/buildExtension.gradle"
}
else {
	throw new GradleException("GHIDRA_INSTALL_DIR is not defined!")
}
