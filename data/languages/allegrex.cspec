<?xml version="1.0" encoding="UTF-8"?>

<compiler_spec>
    <data_organization>
        <pointer_size value="4"/>
        <float_size value="4"/>
        <double_size value="8"/>
        <long_double_size value="8"/>
    </data_organization>

    <stackpointer register="sp" space="ram"/>
    <funcptr align="2"/>
    <spacebase name="gp" register="gp" space="ram"/>
    <global>
        <range space="gp"/>
        <range space="ram"/>
        <range space="register" first="0x2000" last="0x2fff"/>
    </global>
    <returnaddress>
        <register name="ra"/>
    </returnaddress>
    <default_proto>
        <prototype name="__stdcall" extrapop="0" stackshift="0">
            <input>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f12"/>
                </pentry>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f13"/>
                </pentry>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f14"/>
                </pentry>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f15"/>
                </pentry>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f16"/>
                </pentry>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f17"/>
                </pentry>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f18"/>
                </pentry>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f19"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="a0"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="a1"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="a2"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="a3"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="t0"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="t1"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="t2"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="t3"/>
                </pentry>
                <pentry minsize="1" maxsize="500" align="4">
                    <addr offset="0" space="stack"/>
                </pentry>
            </input>
            <output>
                <pentry minsize="1" maxsize="4" metatype="float">
                    <register name="f0"/>
                </pentry>
                <pentry minsize="1" maxsize="4">
                    <register name="v0"/>
                </pentry>
                <pentry minsize="5" maxsize="8">
                    <addr space="join" piece1="v1" piece2="v0"/>
                </pentry>
            </output>
            <unaffected>
                <register name="s0"/>
                <register name="s1"/>
                <register name="s2"/>
                <register name="s3"/>
                <register name="s4"/>
                <register name="s5"/>
                <register name="s6"/>
                <register name="s7"/>
                <register name="fp"/>
                <register name="sp"/>
                <register name="gp"/>
                <register name="f20"/>
                <register name="f22"/>
                <register name="f24"/>
                <register name="f26"/>
                <register name="f28"/>
                <register name="f30"/>
            </unaffected>
            <localrange>
                <range space="stack" first="0xfff0bdc0" last="0xffffffff"/>
                <!-- This is backup storage space for register params, but we treat as locals -->
                <range space="stack" first="0" last="15"/>
            </localrange>
        </prototype>
    </default_proto>
    <callotherfixup targetop="vfpuLoadQ">
        <pcode dynamic="true">
            <input name="baseReg"/>
            <input name="columnMode"/>
            <input name="value1"/>
            <input name="value2"/>
            <input name="value3"/>
            <input name="value4"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuLoadQPart">
        <pcode dynamic="true">
            <input name="baseReg"/>
            <input name="columnMode"/>
            <input name="part"/>
            <input name="value"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuSaveQPart">
        <pcode dynamic="true">
            <output name="output"/>
            <input name="baseReg"/>
            <input name="columnMode"/>
            <input name="part"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuReadP">
        <pcode dynamic="true">
            <output name="output"/>
            <input name="baseReg"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuWriteP">
        <pcode dynamic="true">
            <input name="baseReg"/>
            <input name="value1"/>
            <input name="value2"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuReadT">
        <pcode dynamic="true">
            <output name="output"/>
            <input name="baseReg"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuWriteT">
        <pcode dynamic="true">
            <input name="baseReg"/>
            <input name="value1"/>
            <input name="value2"/>
            <input name="value3"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuReadQ">
        <pcode dynamic="true">
            <output name="output"/>
            <input name="baseReg"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuWriteQ">
        <pcode dynamic="true">
            <input name="baseReg"/>
            <input name="value1"/>
            <input name="value2"/>
            <input name="value3"/>
            <input name="value4"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuReadMatrix2">
        <pcode dynamic="true">
            <output name="output"/>
            <input name="baseReg"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuWriteMatrix2">
        <pcode dynamic="true">
            <input name="baseReg"/>
            <input name="row"/>
            <input name="value1"/>
            <input name="value2"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuReadMatrix3">
        <pcode dynamic="true">
            <output name="output"/>
            <input name="baseReg"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuWriteMatrix3">
        <pcode dynamic="true">
            <input name="baseReg"/>
            <input name="row"/>
            <input name="value1"/>
            <input name="value2"/>
            <input name="value3"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuReadMatrix4">
        <pcode dynamic="true">
            <output name="output"/>
            <input name="baseReg"/>
        </pcode>
    </callotherfixup>
    <callotherfixup targetop="vfpuWriteMatrix4">
        <pcode dynamic="true">
            <input name="baseReg"/>
            <input name="row"/>
            <input name="value1"/>
            <input name="value2"/>
            <input name="value3"/>
            <input name="value4"/>
        </pcode>
    </callotherfixup>
</compiler_spec>
